The application now provides only a basic API with a single `/ping` endpoint and no support for any HTML templates or asset distribution.

To turn this API into a basic web application, we made several changes. First, we created directories with assets and templates:

```
├── static
│   ├── images
│   │   └── werf-logo.svg
│   ├── javascripts
│   │   └── image.js
│   └── stylesheets
│       └── site.css
├── templates
│   ├── image.html
│   └── index.html
```

Then we configured the application to serve assets from the created directories:

{% include snippetcut_example path="internal/app/app.go" syntax="go" snippet="assets" examples=page.examples %}

On the left are the paths to request the assets, and on the right are the paths to them in the directory. Then we configured the loading of the templates from the `templates` directory:

{% include snippetcut_example path="internal/app/app.go" syntax="go" snippet="templates" examples=page.examples %}

Next, we prepared controllers to handle requests to the `/image` and `/` routes that use the loaded templates:

{% include snippetcut_example path="internal/controllers/image_controller.go" syntax="go" examples=page.examples %}

Finally, we added new routes, binding them to the created controllers:

{% include snippetcut_example path="internal/app/app.go" syntax="go" snippet="routes" examples=page.examples %}

The controllers access the template files, the locations of which we specified above:

{% include snippetcut_example path="templates/index.html" syntax="html" examples=page.examples %}

{% include snippetcut_example path="templates/image.html" syntax="html" examples=page.examples %}

Clicking on the *Get image* button must result in running an Ajax request. It will retrieve and render the [SVG image](https://github.com/werf/website/blob/main/examples/golang/030_assets/static/images/werf-logo.svg):

{% include snippetcut_example path="static/javascripts/image.js" syntax="js" examples=page.examples %}

On top of that, the page will use the CSS file [static/stylesheets/site.css](https://github.com/werf/website/blob/main/examples/golang/030_assets/static/stylesheets/site.css).
