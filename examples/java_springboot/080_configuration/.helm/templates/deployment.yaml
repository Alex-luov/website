apiVersion: apps/v1
kind: Deployment
metadata:
  name: werf-guide-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: werf-guide-app
  # [<snippet nginx_conf_checksum>]
  # [<snippet configmap_app_envs_checksum>]
  template:
    metadata:
      labels:
        app: werf-guide-app
      annotations:
        checksum/configmap-nginx: '{{ include (print $.Template.BasePath "/configmap-nginx.yaml") . | sha256sum }}'
        # [<endsnippet nginx_conf_checksum>]
        checksum/configmap-app-envs: '{{ include (print $.Template.BasePath "/configmap-app-envs.yaml") . | sha256sum }}'
        # [<endsnippet configmap_app_envs_checksum>]
        checksum/secret-app-envs: '{{ include (print $.Template.BasePath "/secret-app-envs.yaml") . | sha256sum }}'
    spec:
      imagePullSecrets:
        - name: registrysecret
      initContainers:
        - name: setup-minio
          image: minio/mc
          command:
            - sh
            - -euc
            - |
              is_minio_available() {
                tries=$1
                i=0
                while [ $i -lt $tries ]; do
                  curl -sSL http://minio:9000/minio/health/live || return 1
                  i=$((i+1))
                  sleep 1
                done
              }

              # [<en>] Waiting for MinIO to become available.
              # [<ru>] Дожидаемся доступности MinIO.
              until is_minio_available 10; do
                sleep 1
              done

              # [<en>] Configuring access to our MinIO instance.
              # [<ru>] Настроим доступ к нашем инстансу MinIO.
              mc alias set minio http://minio:9000 minioadmin minioadmin

              # [<en>] Creating a bucket for our application.
              # [<ru>] Создадим bucket для нашего приложения.
              mc mb --ignore-existing minio/werf-guide-app

      # [<snippet backend_conf>]
      # [<snippet backend_secret>]
      containers:
        - name: backend
          image: {{ .Values.werf.image.backend }}
          command:
            - sh
            - -euc
            - |
              is_mysql_available() {
                tries=$1
                i=0
                while [ $i -lt $tries ]; do
                  mysqladmin -h mysql -P 3306 -u root -p=password ping || return 1
                  i=$((i+1))
                  sleep 1
                done
              }
              # [<en>] Waiting for `mysqladmin ping` to run 10 times in a row.
              # [<ru>] Дождёмся, когда `mysqladmin ping` отработает 10 раз подряд.
              until is_mysql_available 10; do
                sleep 1
              done
              is_minio_available() {
                tries=$1
                i=0
                while [ $i -lt $tries ]; do
                  curl -sSL http://minio:9000/minio/health/live || return 1
                  i=$((i+1))
                  sleep 1
                done
              }
              # [<en>] Waiting for MinIO to become available.
              # [<ru>] Дожидаемся доступности MinIO.
              until is_minio_available 10; do
                sleep 1
              done
              java -jar ./app.jar

          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: app-envs
          # [<endsnippet backend_conf>]
            - secretRef:
                name: app-envs
          # [<endsnippet backend_secret>]
            - secretRef:
                name: minio-envs
        # [<snippet nginx_conf>]
        - name: frontend
          image: {{ .Values.werf.image.frontend }}
          ports:
            - containerPort: 80
          volumeMounts:
          - mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            name: nginx-conf
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
        # [<endsnippet nginx_conf>]
