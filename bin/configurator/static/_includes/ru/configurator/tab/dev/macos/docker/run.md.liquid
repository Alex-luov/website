## Требования

* Кластер Kubernetes.

* Публичный репозиторий в container registry.

* Git версии 2.18.0 или выше.

## Сборка и развертывание с werf

Содержимое демо-проекта:

{% tree_file_viewer '/examples/configurator/local-dev' default_file='werf.yaml' %}

Инициализируйте демо-проект на локальной машине:

```shell
git clone https://github.com/werf/examples
cp -rf examples/local-dev example
cd example
git init
git add .
git commit -m-
```

Укажите секретный ключ werf для расшифровки секретов в `.helm/secret-values.yaml`:

```shell
export WERF_SECRET_KEY=733658e8ce39dff4ceef0a3e5d8c15f6
```

Запустите сборку и развертывание с werf:

```shell
werf converge --dev --repo "<путь к репозиторию в container registry>" --env production
```

Убедитесь, что развернутое приложение действительно работает:

```shell
werf kubectl run tmp --image=alpine -n demo-app-production -it --rm -- sh
> apk add curl
> curl 'http://frontend/ping'
> curl 'http://frontend/remember?answer=Hello&name=You'
> curl 'http://frontend/say'
```

Удалите развернутое приложение:

```shell
werf dismiss --env production
```