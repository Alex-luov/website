## Требования

* CI-система;

* Linux-хост для запуска CI-задач, имеющий:
  
  - Shell Runner вашей CI-системы;

  - Bash;
  
  - Git версии 2.18.0 или выше;
  
  - GPG;
  
  - [Docker Engine](https://docs.docker.com/engine/install/).

## Установка werf

Для установки werf, на хосте для запуска CI-задач выполните:

```shell
curl -sSL https://werf.io/install.sh | bash -s -- --ci
```

## Конфигурация container registry

[Включите сборщик мусора]({{ "/documentation/v" | append: include.version | append: "/usage/cleanup/cr_cleanup.html#%D1%81%D0%B1%D0%BE%D1%80%D1%89%D0%B8%D0%BA-%D0%BC%D1%83%D1%81%D0%BE%D1%80%D0%B0-container-registry" | relative_url }}) вашего container registry.

## Конфигурация CI/CD проекта

Так может выглядеть запуск werf в вашей CI-системе:

```yaml
# .pseudo-ci-config.yml:
environment_variables:
  WERF_REPO: registry.example.org/myrepo
  WERF_ENV: "${CI_ENVIRONMENT}"
  WERF_ENABLE_PROCESS_EXTERMINATOR: "1"

before_every_job:
- source "$(~/bin/trdl use werf {{ include.version }} {{ include.channel }})"
- werf cr login -u "${REGISTRY_USER:?}" -p "${REGISTRY_PASSWORD:?}" "${WERF_REPO:?}"

jobs:
  prod:
    commands:
    - werf converge
    environment: prod
    on: master
    how: manually

  images:cleanup:
    commands:
    - werf cleanup
    on: master
    how: daily
```

Дополнительно:
  * Добавьте для `werf cleanup` опции авторизации в container registry, следуя [инструкциям]({{ "/documentation/v{{ include.version }}/usage/cleanup/cr_cleanup.html#%D0%BE%D1%81%D0%BE%D0%B1%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D0%B8-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%8B-%D1%81-%D1%80%D0%B0%D0%B7%D0%BB%D0%B8%D1%87%D0%BD%D1%8B%D0%BC%D0%B8-container-registries" | relative_url }}).
