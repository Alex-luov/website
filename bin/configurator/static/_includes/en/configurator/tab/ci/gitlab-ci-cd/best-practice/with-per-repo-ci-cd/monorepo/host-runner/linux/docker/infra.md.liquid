## Requirements

- GitLab;

- Linux host to run the GitLab Runner with:

  - Bash;

  - Git version 2.18.0 or above;

  - GPG;

  - [Docker Engine](https://docs.docker.com/engine/install/).

## Installing the GitLab Runner

Follow [official instructions](https://docs.gitlab.com/runner/install/linux-repository.html) to install the GitLab Runner on its host.

## Installing werf

To install werf, run the following command on the GitLab Runner host:

```
curl -sSL https://werf.io/install.sh | bash -s -- --ci
```

## Registering the GitLab Runner

Follow [official instructions](https://docs.gitlab.com/runner/register/index.html) to register the GitLab Runner in GitLab; set Shell as the executor. Once the registration is complete, you may want to perform [additional GitLab Runner configuration](https://docs.gitlab.com/runner/configuration/advanced-configuration.html).

## Configuring the container registry

[Enable garbage collection](https://docs.gitlab.com/ee/administration/packages/container_registry.html#container-registry-garbage-collection) for your container registry.

## Preparing the system for cross-platform building (optional)

> This step only needed to build images for platforms other than host platform running werf.

Register emulators on your system using qemu-user-static:

```shell
docker run --restart=always --name=qemu-user-static -d --privileged --entrypoint=/bin/sh multiarch/qemu-user-static -c "/register --reset -p yes && tail -f /dev/null"
```
