## Requirements

* CI system;

* Linux host for running CI jobs, with:

  - Shell Runner of your CI system of choice;

  - Bash;

  - Git version 2.18.0 or above;

  - GPG;

  - [Docker Engine](https://docs.docker.com/engine/install/).

## Installing werf

To install werf, run the following command on the host for running CI jobs:

```shell
curl -sSL https://werf.io/install.sh | bash -s -- --ci
```

## Configuring the container registry

[Enable garbage collection]({{ "/documentation/v1.2/usage/cleanup/cr_cleanup.html#container-registrys-garbage-collector" | relative_url }}) for your container registry.

## Configuring CI/CD of the project

This is what configuration for running werf on your CI system might look like:

```yaml
# .pseudo-ci-config.yml:
environment_variables:
  WERF_REPO: registry.example.org/myrepo
  WERF_ENV: "${CI_ENVIRONMENT}"
  WERF_ENABLE_PROCESS_EXTERMINATOR: "1"

before_every_job:
- source "$(~/bin/trdl use werf 1.2 stable)"
- werf cr login -u "${REGISTRY_USER:?}" -p "${REGISTRY_PASSWORD:?}" "${WERF_REPO:?}"

jobs:
  prod:
    commands:
    - werf converge
    environment: prod
    on: master
    how: manually

  images:cleanup:
    commands:
    - werf cleanup
    on: master
    how: daily
```

{% capture registry_guide_url %}/documentation/v1.2/usage/cleanup/cr_cleanup.html#features-of-working-with-different-container-registries{% endcapture %}
Extras steps:
  * Add authorization options for `werf cleanup` in the container registry by following [instructions]({{ registry_guide_url | relative_url }}).
