## Requirements

* GitHub Actions;

* GitHub-hosted Linux Runner.

## Setting up a GitHub project

Save the kubeconfig file to access the Kubernetes cluster as a `KUBECONFIG_BASE64` [encrypted secret](https://docs.github.com/en/actions/security-guides/encrypted-secrets), pre-encoding it in Base64.

## Configuring CI/CD of the project

This is how the repository that uses werf for build and deploy might look:

<iframe src="https://codesandbox.io/embed/github/werf/examples/tree/main/ci-cd/simple/github-actions/host-runner/linux/buildah?module=/.github/workflows/prod.yml&codemirror=1&autoresize=1&fontsize=13&runonclick=1&theme=dark&view=editor&hidenavigation=1" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe>

Extras:
  * Add authorization options for `werf cleanup` in the container registry by following [instructions]({{ "/documentation/v1.2/usage/cleanup/cr_cleanup.html#features-of-working-with-different-container-registries" | relative_url }}).
