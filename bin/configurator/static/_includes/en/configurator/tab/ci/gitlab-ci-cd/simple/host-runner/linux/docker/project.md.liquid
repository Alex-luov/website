## Configuring the GitLab project

* [Create and save the access token](https://docs.gitlab.com/ee/user/project/settings/project_access_tokens.html#create-a-project-access-token) to clean up the no longer needed images in the container registry with the following parameters:

  * **Token name:** `werf-images-cleanup`;

  * **Role:** `developer`;

  * **Scopes:** `api`.

* Add the following variables to the [project variables](https://docs.gitlab.com/ee/ci/variables/#for-a-project):

  * Access token to clean up the no longer needed images:

    * **Key:** `WERF_IMAGES_CLEANUP_PASSWORD`;

    * **Value:** `<"werf-images-cleanup" access token you saved earlier>`;

    * **Protect variable:** `yes`;

    * **Mask variable:** `yes`.

* [Add a scheduled nightly task](https://docs.gitlab.com/ee/ci/pipelines/schedules.html#add-a-pipeline-schedule) to clean up the no longer needed images in the container registry and set the `main`/`master` branch as the **Target branch**.

## Configuring CI/CD of the project

This is how the repository that uses werf for build and deploy might look:

{% include /common/configurator/codesandbox.html github_path='github/werf/examples/tree/main/ci-cd/simple/gitlab-ci-cd/host-runner/linux/docker' module='/.gitlab-ci.yml' %}

Extras:
  * Add authorization options for `werf cleanup` in the container registry by following [instructions]({{ "/documentation/v1.2/usage/cleanup/cr_cleanup.html#features-of-working-with-different-container-registries" | relative_url }}).
